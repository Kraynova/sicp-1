Задача:
Заметим, что наша модель вычислений разрешает существование комбинаций, операторы которых — составные выражения. 
С помощью этого наблюдения опишите, как работает следующая процедура:

(define (a-plus-abs-b a b)
((if (> b 0) + -) a b))

Решение:

Интерпретатор читает текст программы и определяет в глобальном окружении тело процедуры и связывает его с именем 
  a-plus-abs-b.

Когда мы вызываем ее с аргументами (a-plus-abs-b 1 2), он:
- вычисляет последовательно все комбинации в теле процедуры и возвращает значение последней.

- комбинации вычисляются апликативно, те он сначала вычисляет все подвыражения и затем саму комбинацию.

- вычислим текущую комбинацию:
  - разбирая левое выражение (оператор), он находит - составное выражение (if (> b 0) + -)
    - где, if это специальная форма разбора случаев. 
      В ней сначала вычисляется предикат  (> b 0) - составное выражение с элементарной процедурой ">". 
      Он всегда возвращает #t или #f. 
      Вычислим все подвыражения оператора и применим процедуру. 
      Она вернет элементарную процедуру - которая станет значением оператора для этой комбинации.

- вычисляя остальные выражения комбинации (операнды), мы подставим в ее формальные параметры значения аргументов 
  переданных в функцию и вычислим их значения.
- затем вычислим всю комбинацию и вернем результат значения из функции.

